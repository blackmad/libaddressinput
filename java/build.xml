<?xml version="1.0" ?>

<project name="libaddressinput" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">
  <property name="src.dir" value="src"/>
  <property name="test.dir" value="test"/>
  <property name="build.dir" value="build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="build.lib" value="${build.dir}/lib"/>
  <property name="jar.dir" value="${build.dir}/jar"/>
  <property name="testdata.dir" value="../testdata"/>
  <property name="testlibs.dir" value="testlibs"/>
  <property name="report.dir" value="${build.dir}/junitreport"/>

  <path id="classpath">
    <fileset dir="${build.dir}" includes="**/*.jar"/>
  </path>
  <path id="test.classpath">
    <pathelement location="${classes.dir}"/>
    <pathelement location="${jar.dir}/${ant.project.name}-test.jar"/>
    <fileset dir="${testlibs.dir}" includes="**/*.jar"/>
  </path>

  <property name="ivy.install.version" value="2.3.0" />
  <property name="ivy.home" value="${user.home}/.ant" />
  <property name="ivy.jar.dir" value="${ivy.home}/lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

  <taskdef resource="org/apache/ivy/ant/antlib.xml"
    uri="antlib:org.apache.ivy.ant" classpath="${ivy.jar.dir}/ivy.jar"/>

  <target name="download-ivy">
    <mkdir dir="${ivy.jar.dir}"/>
    <get src="http://central.maven.org/maven2/org/apache/ivy/ivy/2.3.0/ivy-2.3.0.jar"
      dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="resolve" description="--> retreive dependencies with ivy" depends="download-ivy">
    <ivy:retrieve pattern="${build.lib}/[artifact]-[revision].[ext]" conf="*" />
  </target>

  <target name="compile" description="Compile Java source." depends="resolve">
    <mkdir dir="${classes.dir}"/>
    <!-- AddressWidget.java must be excluded, as it depends on R.class, which
         would be generated by the Android resource compiler. -->
    <javac srcdir="${src.dir}/"
           encoding="utf-8"
           includes="com/android/i18n/**"
           excludes="com/android/i18n/addressinput/AddressWidget.java"
           destdir="${classes.dir}"
           classpathref="classpath"
           includeantruntime="false"
           debug="on">
      <compilerarg value="-Xlint"/>
    </javac>
    <javac srcdir="${test.dir}"
           destdir="${classes.dir}"
           classpathref="test.classpath"
           encoding="utf-8"
           includeantruntime="true"
           debug="on"/>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/${ant.project.name}.jar">
      <fileset dir="data">
        <include name="*.txt"/>
      </fileset>
      <fileset dir="${classes.dir}">
        <include name="**/*.class"/>
        <exclude name="**/*Test*"/>
      </fileset>
    </jar>

    <!-- Make the pom.xml -->
    <ivy:makepom ivyfile="${ivy.resolved.file}"
        pomfile="${build.dir}/pom.xml"/>
  </target>

  <target name="test-jar" depends="compile">
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/${ant.project.name}-test.jar">
      <fileset dir="${classes.dir}">
        <include name="**/*.class"/>
        <exclude name="**/*Test*"/>
      </fileset>
      <fileset dir="${testdata.dir}" />
    </jar>
  </target>

 <target name="junit" depends="test-jar">
    <mkdir dir="${report.dir}"/>
    <junit printsummary="yes">
      <classpath refid="test.classpath"/>
      <formatter type="xml"/>
      <batchtest fork="no" todir="${report.dir}">
        <fileset dir="${test.dir}">
          <include name="**/*Test*"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="junitreport">
    <junitreport todir="${report.dir}">
      <fileset dir="${report.dir}" includes="TEST-*.xml"/>
        <report todir="${report.dir}"/>
    </junitreport>
  </target>

  <target name="clean" description="Remove generated files.">
    <delete dir="${build.dir}"/>
  </target>

  <target name="clean-build" depends="clean,jar"/>
</project>
